{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","currentMovie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","movie","imdbID","getMovie","title","a","fetch","response","json","FindMovie","addMovie","useState","setTitle","setMovie","isMovieFound","setMovieFound","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","titleTwo","movieFromAPI","App","setMovies","anotherMovie","moviesCopy","some","push","ReactDOM","render","document","getElementById"],"mappings":"8TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAiBD,EAAjBC,aAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAaG,OAClBC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAaK,aAI5C,sBAAKJ,UAAU,UAAf,UACGD,EAAaM,KACd,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,CAEEV,aAAcU,GADTA,EAAMC,c,uBCbRC,G,MAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACCC,MAAM,GAAD,OAHd,2CAGc,cAAiBF,IADvB,cAChBG,EADgB,yBAGfA,EAASC,QAHM,2CAAH,uDCORC,EAA6B,SAACnB,GACzC,IAAQoB,EAAapB,EAAboB,SAER,EAA0BC,mBAAiB,IAA3C,mBAAOP,EAAP,KAAcQ,EAAd,KACA,EAA0BD,mBAAuB,MAAjD,mBAAOV,EAAP,KAAcY,EAAd,KACA,EAAsCF,oBAAkB,GAAxD,mBAAOG,EAAP,KAAqBC,EAArB,KAEA,OACE,qCACE,uBAAMvB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQwB,QAAQ,cAAjC,yBAIA,qBAAKxB,UAAU,UAAf,SACE,uBACEyB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ3B,UAAU,kBACV4B,MAAOhB,EACPiB,SAAU,SAACC,GAAD,OACRV,EAASU,EAAMC,OAAOH,YAK3BN,EAAe,KACd,mBAAGtB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEyB,KAAK,SACLzB,UAAU,kBACVgC,QAAS,kBACP,uCAAC,WAAOC,GAAP,eAAApB,EAAA,sEACmCF,EAASsB,GAD5C,QACOC,EADP,QAGkB9B,OACfiB,EAASa,GACTX,GAAc,GACdH,EAAS,MAETC,EAAS,MACTE,GAAc,IATjB,2CAAD,sDAWGX,IAfP,4BAsBF,qBAAKZ,UAAU,UAAf,SACE,wBACEyB,KAAK,SACLzB,UAAU,oBACVgC,QAAS,WACHvB,GACFS,EAAST,IALf,qCAeN,sBAAKT,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCS,GAAS,cAAC,EAAD,CAAWV,aAAcU,WCjF9B0B,EAAgB,WAC3B,MAA4BhB,mBAAkB,IAA9C,mBAAOZ,EAAP,KAAe6B,EAAf,KAYA,OACE,sBAAKpC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWkB,SAhBA,SAACmB,GAChB,IAAMC,EAAmB,YAAO/B,GAE3B+B,EAAWC,MAAK,SAAC9B,GAAD,OAAkBA,EAAMC,SAAW2B,EAAa3B,YACnE4B,EAAWE,KAAKH,GAEhBD,EAAUE,aCVhBG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.df43ca09.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  currentMovie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { currentMovie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={currentMovie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{currentMovie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {currentMovie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          currentMovie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey=4d27a21e';\n\nexport const getMovie = async (title: string) => {\n  const response = await fetch(`${API_URL}&t=${title}`);\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (anotherMovie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const { addMovie } = props;\n\n  const [title, setTitle] = useState<string>('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isMovieFound, setMovieFound] = useState<boolean>(false);\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={title}\n              onChange={(event) => (\n                setTitle(event.target.value)\n              )}\n            />\n          </div>\n\n          {isMovieFound ? null : (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => (\n                (async (titleTwo) => {\n                  const movieFromAPI: Movie = await getMovie(titleTwo);\n\n                  if (movieFromAPI.Title) {\n                    setMovie(movieFromAPI);\n                    setMovieFound(true);\n                    setTitle('');\n                  } else {\n                    setMovie(null);\n                    setMovieFound(false);\n                  }\n                })(title)\n              )}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (movie) {\n                  addMovie(movie);\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard currentMovie={movie} />}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (anotherMovie: Movie) => {\n    const moviesCopy: Movie[] = [...movies];\n\n    if (!moviesCopy.some((movie: Movie) => movie.imdbID === anotherMovie.imdbID)) {\n      moviesCopy.push(anotherMovie);\n\n      setMovies(moviesCopy);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}